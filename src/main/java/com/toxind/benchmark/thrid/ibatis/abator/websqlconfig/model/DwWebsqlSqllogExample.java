package com.toxind.benchmark.thrid.ibatis.abator.websqlconfig.model;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class DwWebsqlSqllogExample {
    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table TIANXUAN.DW_WEBSQL_SQLLOG
     *
     * @abatorgenerated Thu Feb 16 11:07:25 CST 2012
     */
    protected String orderByClause;

    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table TIANXUAN.DW_WEBSQL_SQLLOG
     *
     * @abatorgenerated Thu Feb 16 11:07:25 CST 2012
     */
    protected List oredCriteria;

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table TIANXUAN.DW_WEBSQL_SQLLOG
     *
     * @abatorgenerated Thu Feb 16 11:07:25 CST 2012
     */
    public DwWebsqlSqllogExample() {
        oredCriteria = new ArrayList();
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table TIANXUAN.DW_WEBSQL_SQLLOG
     *
     * @abatorgenerated Thu Feb 16 11:07:25 CST 2012
     */
    protected DwWebsqlSqllogExample(DwWebsqlSqllogExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table TIANXUAN.DW_WEBSQL_SQLLOG
     *
     * @abatorgenerated Thu Feb 16 11:07:25 CST 2012
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table TIANXUAN.DW_WEBSQL_SQLLOG
     *
     * @abatorgenerated Thu Feb 16 11:07:25 CST 2012
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table TIANXUAN.DW_WEBSQL_SQLLOG
     *
     * @abatorgenerated Thu Feb 16 11:07:25 CST 2012
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table TIANXUAN.DW_WEBSQL_SQLLOG
     *
     * @abatorgenerated Thu Feb 16 11:07:25 CST 2012
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table TIANXUAN.DW_WEBSQL_SQLLOG
     *
     * @abatorgenerated Thu Feb 16 11:07:25 CST 2012
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table TIANXUAN.DW_WEBSQL_SQLLOG
     *
     * @abatorgenerated Thu Feb 16 11:07:25 CST 2012
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table TIANXUAN.DW_WEBSQL_SQLLOG
     *
     * @abatorgenerated Thu Feb 16 11:07:25 CST 2012
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Abator for iBATIS.
     * This class corresponds to the database table TIANXUAN.DW_WEBSQL_SQLLOG
     *
     * @abatorgenerated Thu Feb 16 11:07:25 CST 2012
     */
    public static class Criteria {
        protected List criteriaWithoutValue;

        protected List criteriaWithSingleValue;

        protected List criteriaWithListValue;

        protected List criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andSqlIdIsNull() {
            addCriterion("SQL_ID is null");
            return this;
        }

        public Criteria andSqlIdIsNotNull() {
            addCriterion("SQL_ID is not null");
            return this;
        }

        public Criteria andSqlIdEqualTo(BigDecimal value) {
            addCriterion("SQL_ID =", value, "sqlId");
            return this;
        }

        public Criteria andSqlIdNotEqualTo(BigDecimal value) {
            addCriterion("SQL_ID <>", value, "sqlId");
            return this;
        }

        public Criteria andSqlIdGreaterThan(BigDecimal value) {
            addCriterion("SQL_ID >", value, "sqlId");
            return this;
        }

        public Criteria andSqlIdGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("SQL_ID >=", value, "sqlId");
            return this;
        }

        public Criteria andSqlIdLessThan(BigDecimal value) {
            addCriterion("SQL_ID <", value, "sqlId");
            return this;
        }

        public Criteria andSqlIdLessThanOrEqualTo(BigDecimal value) {
            addCriterion("SQL_ID <=", value, "sqlId");
            return this;
        }

        public Criteria andSqlIdIn(List values) {
            addCriterion("SQL_ID in", values, "sqlId");
            return this;
        }

        public Criteria andSqlIdNotIn(List values) {
            addCriterion("SQL_ID not in", values, "sqlId");
            return this;
        }

        public Criteria andSqlIdBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("SQL_ID between", value1, value2, "sqlId");
            return this;
        }

        public Criteria andSqlIdNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("SQL_ID not between", value1, value2, "sqlId");
            return this;
        }

        public Criteria andUserCodeIsNull() {
            addCriterion("USER_CODE is null");
            return this;
        }

        public Criteria andUserCodeIsNotNull() {
            addCriterion("USER_CODE is not null");
            return this;
        }

        public Criteria andUserCodeEqualTo(String value) {
            addCriterion("USER_CODE =", value, "userCode");
            return this;
        }

        public Criteria andUserCodeNotEqualTo(String value) {
            addCriterion("USER_CODE <>", value, "userCode");
            return this;
        }

        public Criteria andUserCodeGreaterThan(String value) {
            addCriterion("USER_CODE >", value, "userCode");
            return this;
        }

        public Criteria andUserCodeGreaterThanOrEqualTo(String value) {
            addCriterion("USER_CODE >=", value, "userCode");
            return this;
        }

        public Criteria andUserCodeLessThan(String value) {
            addCriterion("USER_CODE <", value, "userCode");
            return this;
        }

        public Criteria andUserCodeLessThanOrEqualTo(String value) {
            addCriterion("USER_CODE <=", value, "userCode");
            return this;
        }

        public Criteria andUserCodeLike(String value) {
            addCriterion("USER_CODE like", value, "userCode");
            return this;
        }

        public Criteria andUserCodeNotLike(String value) {
            addCriterion("USER_CODE not like", value, "userCode");
            return this;
        }

        public Criteria andUserCodeIn(List values) {
            addCriterion("USER_CODE in", values, "userCode");
            return this;
        }

        public Criteria andUserCodeNotIn(List values) {
            addCriterion("USER_CODE not in", values, "userCode");
            return this;
        }

        public Criteria andUserCodeBetween(String value1, String value2) {
            addCriterion("USER_CODE between", value1, value2, "userCode");
            return this;
        }

        public Criteria andUserCodeNotBetween(String value1, String value2) {
            addCriterion("USER_CODE not between", value1, value2, "userCode");
            return this;
        }

        public Criteria andSubmitSqlIsNull() {
            addCriterion("SUBMIT_SQL is null");
            return this;
        }

        public Criteria andSubmitSqlIsNotNull() {
            addCriterion("SUBMIT_SQL is not null");
            return this;
        }

        public Criteria andSubmitSqlEqualTo(String value) {
            addCriterion("SUBMIT_SQL =", value, "submitSql");
            return this;
        }

        public Criteria andSubmitSqlNotEqualTo(String value) {
            addCriterion("SUBMIT_SQL <>", value, "submitSql");
            return this;
        }

        public Criteria andSubmitSqlGreaterThan(String value) {
            addCriterion("SUBMIT_SQL >", value, "submitSql");
            return this;
        }

        public Criteria andSubmitSqlGreaterThanOrEqualTo(String value) {
            addCriterion("SUBMIT_SQL >=", value, "submitSql");
            return this;
        }

        public Criteria andSubmitSqlLessThan(String value) {
            addCriterion("SUBMIT_SQL <", value, "submitSql");
            return this;
        }

        public Criteria andSubmitSqlLessThanOrEqualTo(String value) {
            addCriterion("SUBMIT_SQL <=", value, "submitSql");
            return this;
        }

        public Criteria andSubmitSqlLike(String value) {
            addCriterion("SUBMIT_SQL like", value, "submitSql");
            return this;
        }

        public Criteria andSubmitSqlNotLike(String value) {
            addCriterion("SUBMIT_SQL not like", value, "submitSql");
            return this;
        }

        public Criteria andSubmitSqlIn(List values) {
            addCriterion("SUBMIT_SQL in", values, "submitSql");
            return this;
        }

        public Criteria andSubmitSqlNotIn(List values) {
            addCriterion("SUBMIT_SQL not in", values, "submitSql");
            return this;
        }

        public Criteria andSubmitSqlBetween(String value1, String value2) {
            addCriterion("SUBMIT_SQL between", value1, value2, "submitSql");
            return this;
        }

        public Criteria andSubmitSqlNotBetween(String value1, String value2) {
            addCriterion("SUBMIT_SQL not between", value1, value2, "submitSql");
            return this;
        }

        public Criteria andCommitTimeIsNull() {
            addCriterion("COMMIT_TIME is null");
            return this;
        }

        public Criteria andCommitTimeIsNotNull() {
            addCriterion("COMMIT_TIME is not null");
            return this;
        }

        public Criteria andCommitTimeEqualTo(Date value) {
            addCriterion("COMMIT_TIME =", value, "commitTime");
            return this;
        }

        public Criteria andCommitTimeNotEqualTo(Date value) {
            addCriterion("COMMIT_TIME <>", value, "commitTime");
            return this;
        }

        public Criteria andCommitTimeGreaterThan(Date value) {
            addCriterion("COMMIT_TIME >", value, "commitTime");
            return this;
        }

        public Criteria andCommitTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("COMMIT_TIME >=", value, "commitTime");
            return this;
        }

        public Criteria andCommitTimeLessThan(Date value) {
            addCriterion("COMMIT_TIME <", value, "commitTime");
            return this;
        }

        public Criteria andCommitTimeLessThanOrEqualTo(Date value) {
            addCriterion("COMMIT_TIME <=", value, "commitTime");
            return this;
        }

        public Criteria andCommitTimeIn(List values) {
            addCriterion("COMMIT_TIME in", values, "commitTime");
            return this;
        }

        public Criteria andCommitTimeNotIn(List values) {
            addCriterion("COMMIT_TIME not in", values, "commitTime");
            return this;
        }

        public Criteria andCommitTimeBetween(Date value1, Date value2) {
            addCriterion("COMMIT_TIME between", value1, value2, "commitTime");
            return this;
        }

        public Criteria andCommitTimeNotBetween(Date value1, Date value2) {
            addCriterion("COMMIT_TIME not between", value1, value2, "commitTime");
            return this;
        }

        public Criteria andBeginTimeIsNull() {
            addCriterion("BEGIN_TIME is null");
            return this;
        }

        public Criteria andBeginTimeIsNotNull() {
            addCriterion("BEGIN_TIME is not null");
            return this;
        }

        public Criteria andBeginTimeEqualTo(Date value) {
            addCriterion("BEGIN_TIME =", value, "beginTime");
            return this;
        }

        public Criteria andBeginTimeNotEqualTo(Date value) {
            addCriterion("BEGIN_TIME <>", value, "beginTime");
            return this;
        }

        public Criteria andBeginTimeGreaterThan(Date value) {
            addCriterion("BEGIN_TIME >", value, "beginTime");
            return this;
        }

        public Criteria andBeginTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("BEGIN_TIME >=", value, "beginTime");
            return this;
        }

        public Criteria andBeginTimeLessThan(Date value) {
            addCriterion("BEGIN_TIME <", value, "beginTime");
            return this;
        }

        public Criteria andBeginTimeLessThanOrEqualTo(Date value) {
            addCriterion("BEGIN_TIME <=", value, "beginTime");
            return this;
        }

        public Criteria andBeginTimeIn(List values) {
            addCriterion("BEGIN_TIME in", values, "beginTime");
            return this;
        }

        public Criteria andBeginTimeNotIn(List values) {
            addCriterion("BEGIN_TIME not in", values, "beginTime");
            return this;
        }

        public Criteria andBeginTimeBetween(Date value1, Date value2) {
            addCriterion("BEGIN_TIME between", value1, value2, "beginTime");
            return this;
        }

        public Criteria andBeginTimeNotBetween(Date value1, Date value2) {
            addCriterion("BEGIN_TIME not between", value1, value2, "beginTime");
            return this;
        }

        public Criteria andEndTimeIsNull() {
            addCriterion("END_TIME is null");
            return this;
        }

        public Criteria andEndTimeIsNotNull() {
            addCriterion("END_TIME is not null");
            return this;
        }

        public Criteria andEndTimeEqualTo(Date value) {
            addCriterion("END_TIME =", value, "endTime");
            return this;
        }

        public Criteria andEndTimeNotEqualTo(Date value) {
            addCriterion("END_TIME <>", value, "endTime");
            return this;
        }

        public Criteria andEndTimeGreaterThan(Date value) {
            addCriterion("END_TIME >", value, "endTime");
            return this;
        }

        public Criteria andEndTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("END_TIME >=", value, "endTime");
            return this;
        }

        public Criteria andEndTimeLessThan(Date value) {
            addCriterion("END_TIME <", value, "endTime");
            return this;
        }

        public Criteria andEndTimeLessThanOrEqualTo(Date value) {
            addCriterion("END_TIME <=", value, "endTime");
            return this;
        }

        public Criteria andEndTimeIn(List values) {
            addCriterion("END_TIME in", values, "endTime");
            return this;
        }

        public Criteria andEndTimeNotIn(List values) {
            addCriterion("END_TIME not in", values, "endTime");
            return this;
        }

        public Criteria andEndTimeBetween(Date value1, Date value2) {
            addCriterion("END_TIME between", value1, value2, "endTime");
            return this;
        }

        public Criteria andEndTimeNotBetween(Date value1, Date value2) {
            addCriterion("END_TIME not between", value1, value2, "endTime");
            return this;
        }

        public Criteria andLastTimeSecIsNull() {
            addCriterion("LAST_TIME_SEC is null");
            return this;
        }

        public Criteria andLastTimeSecIsNotNull() {
            addCriterion("LAST_TIME_SEC is not null");
            return this;
        }

        public Criteria andLastTimeSecEqualTo(BigDecimal value) {
            addCriterion("LAST_TIME_SEC =", value, "lastTimeSec");
            return this;
        }

        public Criteria andLastTimeSecNotEqualTo(BigDecimal value) {
            addCriterion("LAST_TIME_SEC <>", value, "lastTimeSec");
            return this;
        }

        public Criteria andLastTimeSecGreaterThan(BigDecimal value) {
            addCriterion("LAST_TIME_SEC >", value, "lastTimeSec");
            return this;
        }

        public Criteria andLastTimeSecGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("LAST_TIME_SEC >=", value, "lastTimeSec");
            return this;
        }

        public Criteria andLastTimeSecLessThan(BigDecimal value) {
            addCriterion("LAST_TIME_SEC <", value, "lastTimeSec");
            return this;
        }

        public Criteria andLastTimeSecLessThanOrEqualTo(BigDecimal value) {
            addCriterion("LAST_TIME_SEC <=", value, "lastTimeSec");
            return this;
        }

        public Criteria andLastTimeSecIn(List values) {
            addCriterion("LAST_TIME_SEC in", values, "lastTimeSec");
            return this;
        }

        public Criteria andLastTimeSecNotIn(List values) {
            addCriterion("LAST_TIME_SEC not in", values, "lastTimeSec");
            return this;
        }

        public Criteria andLastTimeSecBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("LAST_TIME_SEC between", value1, value2, "lastTimeSec");
            return this;
        }

        public Criteria andLastTimeSecNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("LAST_TIME_SEC not between", value1, value2, "lastTimeSec");
            return this;
        }

        public Criteria andDsIdIsNull() {
            addCriterion("DS_ID is null");
            return this;
        }

        public Criteria andDsIdIsNotNull() {
            addCriterion("DS_ID is not null");
            return this;
        }

        public Criteria andDsIdEqualTo(BigDecimal value) {
            addCriterion("DS_ID =", value, "dsId");
            return this;
        }

        public Criteria andDsIdNotEqualTo(BigDecimal value) {
            addCriterion("DS_ID <>", value, "dsId");
            return this;
        }

        public Criteria andDsIdGreaterThan(BigDecimal value) {
            addCriterion("DS_ID >", value, "dsId");
            return this;
        }

        public Criteria andDsIdGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("DS_ID >=", value, "dsId");
            return this;
        }

        public Criteria andDsIdLessThan(BigDecimal value) {
            addCriterion("DS_ID <", value, "dsId");
            return this;
        }

        public Criteria andDsIdLessThanOrEqualTo(BigDecimal value) {
            addCriterion("DS_ID <=", value, "dsId");
            return this;
        }

        public Criteria andDsIdIn(List values) {
            addCriterion("DS_ID in", values, "dsId");
            return this;
        }

        public Criteria andDsIdNotIn(List values) {
            addCriterion("DS_ID not in", values, "dsId");
            return this;
        }

        public Criteria andDsIdBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("DS_ID between", value1, value2, "dsId");
            return this;
        }

        public Criteria andDsIdNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("DS_ID not between", value1, value2, "dsId");
            return this;
        }

        public Criteria andDsNameIsNull() {
            addCriterion("DS_NAME is null");
            return this;
        }

        public Criteria andDsNameIsNotNull() {
            addCriterion("DS_NAME is not null");
            return this;
        }

        public Criteria andDsNameEqualTo(String value) {
            addCriterion("DS_NAME =", value, "dsName");
            return this;
        }

        public Criteria andDsNameNotEqualTo(String value) {
            addCriterion("DS_NAME <>", value, "dsName");
            return this;
        }

        public Criteria andDsNameGreaterThan(String value) {
            addCriterion("DS_NAME >", value, "dsName");
            return this;
        }

        public Criteria andDsNameGreaterThanOrEqualTo(String value) {
            addCriterion("DS_NAME >=", value, "dsName");
            return this;
        }

        public Criteria andDsNameLessThan(String value) {
            addCriterion("DS_NAME <", value, "dsName");
            return this;
        }

        public Criteria andDsNameLessThanOrEqualTo(String value) {
            addCriterion("DS_NAME <=", value, "dsName");
            return this;
        }

        public Criteria andDsNameLike(String value) {
            addCriterion("DS_NAME like", value, "dsName");
            return this;
        }

        public Criteria andDsNameNotLike(String value) {
            addCriterion("DS_NAME not like", value, "dsName");
            return this;
        }

        public Criteria andDsNameIn(List values) {
            addCriterion("DS_NAME in", values, "dsName");
            return this;
        }

        public Criteria andDsNameNotIn(List values) {
            addCriterion("DS_NAME not in", values, "dsName");
            return this;
        }

        public Criteria andDsNameBetween(String value1, String value2) {
            addCriterion("DS_NAME between", value1, value2, "dsName");
            return this;
        }

        public Criteria andDsNameNotBetween(String value1, String value2) {
            addCriterion("DS_NAME not between", value1, value2, "dsName");
            return this;
        }

        public Criteria andMessageIsNull() {
            addCriterion("MESSAGE is null");
            return this;
        }

        public Criteria andMessageIsNotNull() {
            addCriterion("MESSAGE is not null");
            return this;
        }

        public Criteria andMessageEqualTo(String value) {
            addCriterion("MESSAGE =", value, "message");
            return this;
        }

        public Criteria andMessageNotEqualTo(String value) {
            addCriterion("MESSAGE <>", value, "message");
            return this;
        }

        public Criteria andMessageGreaterThan(String value) {
            addCriterion("MESSAGE >", value, "message");
            return this;
        }

        public Criteria andMessageGreaterThanOrEqualTo(String value) {
            addCriterion("MESSAGE >=", value, "message");
            return this;
        }

        public Criteria andMessageLessThan(String value) {
            addCriterion("MESSAGE <", value, "message");
            return this;
        }

        public Criteria andMessageLessThanOrEqualTo(String value) {
            addCriterion("MESSAGE <=", value, "message");
            return this;
        }

        public Criteria andMessageLike(String value) {
            addCriterion("MESSAGE like", value, "message");
            return this;
        }

        public Criteria andMessageNotLike(String value) {
            addCriterion("MESSAGE not like", value, "message");
            return this;
        }

        public Criteria andMessageIn(List values) {
            addCriterion("MESSAGE in", values, "message");
            return this;
        }

        public Criteria andMessageNotIn(List values) {
            addCriterion("MESSAGE not in", values, "message");
            return this;
        }

        public Criteria andMessageBetween(String value1, String value2) {
            addCriterion("MESSAGE between", value1, value2, "message");
            return this;
        }

        public Criteria andMessageNotBetween(String value1, String value2) {
            addCriterion("MESSAGE not between", value1, value2, "message");
            return this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("STATUS is null");
            return this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("STATUS is not null");
            return this;
        }

        public Criteria andStatusEqualTo(String value) {
            addCriterion("STATUS =", value, "status");
            return this;
        }

        public Criteria andStatusNotEqualTo(String value) {
            addCriterion("STATUS <>", value, "status");
            return this;
        }

        public Criteria andStatusGreaterThan(String value) {
            addCriterion("STATUS >", value, "status");
            return this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(String value) {
            addCriterion("STATUS >=", value, "status");
            return this;
        }

        public Criteria andStatusLessThan(String value) {
            addCriterion("STATUS <", value, "status");
            return this;
        }

        public Criteria andStatusLessThanOrEqualTo(String value) {
            addCriterion("STATUS <=", value, "status");
            return this;
        }

        public Criteria andStatusLike(String value) {
            addCriterion("STATUS like", value, "status");
            return this;
        }

        public Criteria andStatusNotLike(String value) {
            addCriterion("STATUS not like", value, "status");
            return this;
        }

        public Criteria andStatusIn(List values) {
            addCriterion("STATUS in", values, "status");
            return this;
        }

        public Criteria andStatusNotIn(List values) {
            addCriterion("STATUS not in", values, "status");
            return this;
        }

        public Criteria andStatusBetween(String value1, String value2) {
            addCriterion("STATUS between", value1, value2, "status");
            return this;
        }

        public Criteria andStatusNotBetween(String value1, String value2) {
            addCriterion("STATUS not between", value1, value2, "status");
            return this;
        }
    }
}